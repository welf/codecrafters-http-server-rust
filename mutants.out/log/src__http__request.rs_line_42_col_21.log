
*** src/http/request.rs:42:21: replace != with == in <impl TryFrom for Request>::try_from

*** mutation diff:
--- src/http/request.rs
+++ replace != with == in <impl TryFrom for Request>::try_from
@@ -34,17 +34,17 @@
 
         if !uri.starts_with('/') {
             return Err(ParseRequestError {
                 kind: ParseRequestErrorKind::InvalidRequest,
             });
         }
 
         // Ensure the protocol is HTTP/1.1
-        if protocol != "HTTP/1.1" {
+        if protocol == /* ~ changed by cargo-mutants ~ */ "HTTP/1.1" {
             // We can get an empty protocol if the method or URI are missing
             if protocol.is_empty() {
                 return Err(ParseRequestError {
                     kind: ParseRequestErrorKind::InvalidRequest,
                 });
             }
             return Err(ParseRequestError {
                 kind: ParseRequestErrorKind::InvalidProtocol,


*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --no-run --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
   Compiling http-server-starter-rust v0.1.0 (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.24s
  Executable unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

*** result: Success

*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s
     Running unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

running 20 tests
test http::request::tests::test_get_next_request_line ... ok
test http::request::tests::test_get_next_word ... ok
test http::request::tests::test_parse_header ... ok
test handlers::tests::test_get_echo_response ... FAILED
test handlers::tests::test_get_user_agent_response ... FAILED
test handlers::tests::test_get_user_agent_response_no_user_agent ... FAILED
test http::response::tests::test_response_to_bytes_vec ... ok
test http::request::tests::test_try_from_request ... FAILED
test http::response::tests::test_response_to_string ... ok
test http::response_builder::tests::test_response_builder_bad_request ... ok
test http::response_builder::tests::test_response_builder_body ... ok
test http::response_builder::tests::test_response_builder_default ... ok
test http::response_builder::tests::test_response_builder_internal_server_error ... ok
test http::response_builder::tests::test_response_builder_not_found ... ok
test http::response_builder::tests::test_response_builder_ok ... ok
test http::response_builder::tests::test_response_builder_with ... ok
test http::response_builder::tests::test_without_content_length_header ... ok
test http::status_code::tests::status_code_display ... ok
test http::status_code::tests::status_code_message ... ok
test handlers::tests::test_get_file_response ... ok

failures:

---- handlers::tests::test_get_echo_response stdout ----
thread 'handlers::tests::test_get_echo_response' panicked at src/handlers.rs:137:85:
called `Result::unwrap()` on an `Err` value: ParseRequestError { kind: InvalidProtocol }

---- handlers::tests::test_get_user_agent_response stdout ----
thread 'handlers::tests::test_get_user_agent_response' panicked at src/handlers.rs:106:18:
called `Result::unwrap()` on an `Err` value: ParseRequestError { kind: InvalidProtocol }

---- handlers::tests::test_get_user_agent_response_no_user_agent stdout ----
thread 'handlers::tests::test_get_user_agent_response_no_user_agent' panicked at src/handlers.rs:123:77:
called `Result::unwrap()` on an `Err` value: ParseRequestError { kind: InvalidProtocol }
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- http::request::tests::test_try_from_request stdout ----
thread 'http::request::tests::test_try_from_request' panicked at src/http/request.rs:175:190:
called `Result::unwrap()` on an `Err` value: ParseRequestError { kind: InvalidProtocol }


failures:
    handlers::tests::test_get_echo_response
    handlers::tests::test_get_user_agent_response
    handlers::tests::test_get_user_agent_response_no_user_agent
    http::request::tests::test_try_from_request

test result: FAILED. 16 passed; 4 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--bin http-server-starter-rust`

*** result: Failure(101)
