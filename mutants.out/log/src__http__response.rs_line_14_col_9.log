
*** src/http/response.rs:14:9: replace Response::to_bytes_vec -> Vec<u8> with vec![0]

*** mutation diff:
--- src/http/response.rs
+++ replace Response::to_bytes_vec -> Vec<u8> with vec![0]
@@ -6,41 +6,17 @@
 pub struct Response {
     pub status_code: StatusCode,
     pub headers: Vec<(String, String)>,
     pub body: Option<Vec<u8>>,
 }
 
 impl Response {
     pub fn to_bytes_vec(&self) -> Vec<u8> {
-        let mut response: Vec<u8> = Vec::new();
-
-        let status_code: String = format!("{}", self.status_code);
-
-        let mut headers: Vec<u8> = self.headers.iter().fold(vec![], |mut acc, (k, v)| {
-            acc.extend_from_slice(k.as_bytes());
-            acc.extend_from_slice(b": ");
-            acc.extend_from_slice(v.as_bytes());
-            acc.extend_from_slice(b"\r\n");
-            acc
-        });
-
-        // Add additional CLRF after all headers
-        headers.extend_from_slice(b"\r\n");
-
-        if let Some(body) = &self.body {
-            response.extend_from_slice(status_code.as_bytes());
-            response.extend(headers);
-            response.extend_from_slice(body);
-        } else {
-            response.extend_from_slice(status_code.as_bytes());
-            response.extend(headers);
-        }
-
-        response
+        vec![0] /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl Display for Response {
     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
         let headers = self.headers.iter().fold(String::new(), |mut acc, (k, v)| {
             let _ = write!(acc, "{}: {}\r\n", k, v);
             acc


*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --no-run --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
   Compiling http-server-starter-rust v0.1.0 (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.23s
  Executable unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

*** result: Success

*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s
     Running unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

running 20 tests
test handlers::tests::test_get_echo_response ... ok
test handlers::tests::test_get_user_agent_response ... ok
test handlers::tests::test_get_user_agent_response_no_user_agent ... ok
test http::request::tests::test_get_next_request_line ... ok
test http::request::tests::test_get_next_word ... ok
test http::request::tests::test_parse_header ... ok
test http::request::tests::test_try_from_request ... ok
test http::response::tests::test_response_to_string ... ok
test http::response_builder::tests::test_response_builder_bad_request ... ok
test http::response_builder::tests::test_response_builder_body ... ok
test http::response::tests::test_response_to_bytes_vec ... FAILED
test http::response_builder::tests::test_response_builder_default ... ok
test http::response_builder::tests::test_response_builder_internal_server_error ... ok
test http::response_builder::tests::test_response_builder_not_found ... ok
test http::response_builder::tests::test_response_builder_ok ... ok
test http::response_builder::tests::test_response_builder_with ... ok
test http::response_builder::tests::test_without_content_length_header ... ok
test http::status_code::tests::status_code_display ... ok
test http::status_code::tests::status_code_message ... ok
test handlers::tests::test_get_file_response ... ok

failures:

---- http::response::tests::test_response_to_bytes_vec stdout ----
thread 'http::response::tests::test_response_to_bytes_vec' panicked at src/http/response.rs:51:9:
assertion `left == right` failed: Response should be converted to bytes vector
  left: [0]
 right: [72, 84, 84, 80, 47, 49, 46, 49, 32, 50, 48, 48, 32, 79, 75, 13, 10, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 32, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 13, 10, 67, 111, 110, 116, 101, 110, 116, 45, 76, 101, 110, 103, 116, 104, 58, 32, 49, 51, 13, 10, 13, 10, 72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33]
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    http::response::tests::test_response_to_bytes_vec

test result: FAILED. 19 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--bin http-server-starter-rust`

*** result: Failure(101)
