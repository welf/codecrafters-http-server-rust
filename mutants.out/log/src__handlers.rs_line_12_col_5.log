
*** src/handlers.rs:12:5: replace handle_connection -> Result<(), ParseRequestError> with Ok(())

*** mutation diff:
--- src/handlers.rs
+++ replace handle_connection -> Result<(), ParseRequestError> with Ok(())
@@ -4,55 +4,17 @@
 };
 
 use crate::http::{ParseRequestError, Request, Response, ResponseBuilder};
 
 pub async fn handle_connection(
     mut stream: TcpStream,
     files_dir: &String,
 ) -> Result<(), ParseRequestError> {
-    let mut buf_reader = BufReader::new(&mut stream);
-
-    let request_str = std::str::from_utf8(buf_reader.fill_buf().await?)?;
-
-    let request = Request::try_from(request_str)?;
-
-    let path = request.uri.as_str();
-
-    let response = match path {
-        "/" => ResponseBuilder::ok()
-            .with(vec![
-                ("Connection", "Keep-Alive"),
-                ("Keep-Alive", "timeout=5, max=1000"),
-            ])
-            // Disable Content-Length header generation to pass codecrafters tests
-            .without_content_length_header()
-            .build(),
-
-        "/user-agent" => get_user_agent_response(&request),
-
-        other => {
-            if other.starts_with("/echo/") {
-                get_echo_response(other.trim_start_matches("/echo/"))
-            } else if path.starts_with("/files/") {
-                get_file_response(other.trim_start_matches("/files/"), files_dir)
-            } else {
-                ResponseBuilder::not_found().build()
-            }
-        }
-    };
-
-    stream
-        .write_all(response.to_bytes_vec().as_slice())
-        .await
-        .expect("Failed to write to stream");
-
-    stream.flush().await.expect("Failed to flush stream");
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 fn get_file_response(file_name: &str, files_dir: &String) -> Response {
     let path = format!("{}/{}", files_dir, file_name);
     let file = match std::fs::read(path) {
         Ok(file) => file,
         Err(_) => {
             return ResponseBuilder::not_found()


*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --no-run --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
   Compiling http-server-starter-rust v0.1.0 (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.25s
  Executable unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

*** result: Success

*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s
     Running unittests src/main.rs (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/target/debug/deps/http_server_starter_rust-21207571861bdde5)

running 20 tests
test handlers::tests::test_get_user_agent_response ... ok
test handlers::tests::test_get_echo_response ... ok
test http::request::tests::test_get_next_request_line ... ok
test handlers::tests::test_get_user_agent_response_no_user_agent ... ok
test http::request::tests::test_get_next_word ... ok
test http::request::tests::test_parse_header ... ok
test http::request::tests::test_try_from_request ... ok
test http::response::tests::test_response_to_bytes_vec ... ok
test http::response::tests::test_response_to_string ... ok
test http::response_builder::tests::test_response_builder_bad_request ... ok
test http::response_builder::tests::test_response_builder_body ... ok
test http::response_builder::tests::test_response_builder_default ... ok
test http::response_builder::tests::test_response_builder_internal_server_error ... ok
test http::response_builder::tests::test_response_builder_not_found ... ok
test http::response_builder::tests::test_response_builder_ok ... ok
test http::response_builder::tests::test_response_builder_with ... ok
test http::response_builder::tests::test_without_content_length_header ... ok
test http::status_code::tests::status_code_display ... ok
test http::status_code::tests::status_code_message ... ok
test handlers::tests::test_get_file_response ... ok

test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


*** result: Success
