
*** src/http/response_builder.rs:213:9: replace <impl IntoResponsePart for Vec<(T, T)>>::into_response_part -> ResponsePart<T> with ResponsePart::from(Default::default())

*** mutation diff:
--- src/http/response_builder.rs
+++ replace <impl IntoResponsePart for Vec<(T, T)>>::into_response_part -> ResponsePart<T> with ResponsePart::from(Default::default())
@@ -205,17 +205,17 @@
     fn into_response_part(self) -> ResponsePart<T> {
         ResponsePart::Header(self.0, self.1)
     }
 }
 
 // Implement the IntoResponsePart trait for vectors of tuples of two elements to represent multiple headers
 impl<T: Into<String>> IntoResponsePart<T> for Vec<(T, T)> {
     fn into_response_part(self) -> ResponsePart<T> {
-        ResponsePart::Headers(self)
+        ResponsePart::from(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[cfg(test)]
 mod tests {
     use super::*;
 
     #[test]


*** /Users/aw/.rustup/toolchains/stable-aarch64-apple-darwin/bin/cargo test --no-run --manifest-path /var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp/Cargo.toml --all-features
   Compiling http-server-starter-rust v0.1.0 (/var/folders/dk/rmy45p9s5bn3y62kyrkfh6440000gn/T/cargo-mutants-codecrafters-http-server-rust-eXV76S.tmp)
error[E0277]: the trait bound `ResponsePart<T>: std::default::Default` is not satisfied
   --> src/http/response_builder.rs:213:28
    |
213 |         ResponsePart::from(Default::default()) /* ~ changed by cargo-mutants ~ */
    |                            ^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `ResponsePart<T>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `http-server-starter-rust` (bin "http-server-starter-rust" test) due to 1 previous error

*** result: Failure(101)
